apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
android {

    compileSdkVersion parent.ext.compileSdkVersion
    buildToolsVersion parent.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.wappiter.app"
        minSdkVersion parent.ext.minSdkVersion
        targetSdkVersion parent.ext.targetSdkVersion
        versionCode 9
        versionName "1.1.5"
        buildConfigField "int", "CONCURRENT_INTERACTORS", "3"
        buildConfigField "boolean", "RETROFIT_LOG", "true"
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias 'wappiter'
            keyPassword 'keystore_wappiter'
            storeFile file('../androidkeys/wappiter/keys')
            storePassword 'keystore_wappiter'
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            signingConfig signingConfigs.release
        }
    }
    flavorDimensions "environment"

    productFlavors {
        develop {
            applicationIdSuffix ".dev"
            versionCode 9
            versionName "1.3.0"
            dimension 'environment'
        }

        qa {
            applicationIdSuffix ".qa"
            versionCode 8
            versionName "1.3.0"
            dimension 'environment'
        }
        production {
            versionCode 9
            versionName "1.4.0"
            dimension 'environment'
        }
    }

    sourceSets {
        develop { java.srcDirs = ['src/develop/java', 'src/develop/java/'] }
        qa { java.srcDirs = ['src/qa/java', 'src/qa/java/'] }
        production { java.srcDirs = ['src/production/java', 'src/production/java/'] }
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def project = "wappiter"
            def flavorName = variant.productFlavors[0].name
            def SEP = "_"
            def buildType = variant.variantData.variantConfiguration.buildType.name
            def version = variant.versionName
            def code = variant.versionCode
            def date = new Date()
            def formattedDate = date.format('ddMMyy')
            output.outputFileName = project + SEP + flavorName + SEP + buildType + SEP + version + SEP + "code" + SEP + code + SEP + formattedDate + ".apk"
        }
    }
}

kapt {
    generateStubs = true
    correctErrorTypes = true
}

dependencies {

    configurations {
        all*.exclude group: 'com.android.support', module: 'support-v13'
    }

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':domain')
    implementation project(':data')

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    implementation 'com.google.android.material:material:1.1.0'
    implementation 'com.google.android.gms:play-services-analytics:17.0.0'
    implementation 'com.google.firebase:firebase-core:17.4.1'
    implementation 'com.google.firebase:firebase-messaging:20.1.7'
    implementation 'com.google.firebase:firebase-inappmessaging-display:19.0.6'
    implementation 'com.google.firebase:firebase-auth:19.3.1'

    // Add the Firebase SDK for Crashlytics.
    implementation 'com.google.firebase:firebase-crashlytics:17.0.0'

    //play service auth
    //implementation 'com.google.android.gms:play-services-auth:18.0.0'

    //Facebook auth
    //implementation 'com.facebook.android:facebook-login:4.39.0'

    // BranchIO
    implementation 'io.branch.sdk.android:library:3.2.0'

    implementation 'androidx.navigation:navigation-fragment-ktx:2.2.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.2.2'

    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.72'

    // Network
    implementation('com.squareup.retrofit2:converter-gson:2.8.2') { exclude module: 'gson' }
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.retrofit2:retrofit:2.8.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.7.1'

    // Dagger
    kapt "com.google.dagger:dagger-android-processor:2.27"
    kapt "com.google.dagger:dagger-compiler:2.27"
    annotationProcessor 'com.google.dagger:dagger-compiler:2.27'
    implementation 'com.google.dagger:dagger:2.27'
    compileOnly 'javax.annotation:jsr250-api:1.0'

    // Thread decorated view
    implementation 'me.panavtec:threaddecoratedview-common:1.5.3'
    annotationProcessor 'me.panavtec:threaddecoratedview-compiler:1.5.3'
    kapt 'me.panavtec:threaddecoratedview-compiler:1.5.3'

    // List View Animations
    implementation 'com.nhaarman.listviewanimations:library:2.6.0'

    // View pager indicator
    implementation 'com.github.JakeWharton:ViewPagerIndicator:2.4.1'

    // Material dialog
    implementation 'com.afollestad.material-dialogs:core:3.2.1'

    // Parceler
    implementation 'org.parceler:parceler-api:1.1.13'
    annotationProcessor 'org.parceler:parceler:1.1.13'

    // Adapter delegate
    implementation 'com.hannesdorfmann:adapterdelegates4:4.3.0'

    // Coil show images
    implementation 'io.coil-kt:coil:0.11.0'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    //QR
    implementation 'me.dm7.barcodescanner:zxing:1.9.13'

    //Permissions
    implementation 'com.karumi:dexter:6.0.2'

    //Eventbus
    implementation 'org.greenrobot:eventbus:3.1.1'

}

apply plugin: 'com.google.gms.google-services'
repositories {
    mavenCentral()
}
